{"version":3,"sources":["Timer.jsx","App.jsx","index.js"],"names":["Timer","props","time","steps","autostart","onTick","useState","inTime","setInTime","minutes","setMinutes","seconds","setSeconds","start","setStart","pause","setPause","step","autoStart","onStart","setTimeout","widthLine","useEffect","Math","floor","className","onClick","style","width","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8JAiFeA,MA7Ef,SAAeC,GAAQ,IAEdC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,MAAeC,GAAaH,EAArBI,OAAqBJ,EAAbG,WAFR,EAKQE,mBAASJ,GALjB,mBAKbK,EALa,KAKLC,EALK,OAMUF,qBANV,mBAMbG,EANa,KAMJC,EANI,OAOUJ,qBAPV,mBAObK,EAPa,KAOJC,EAPI,OAQMN,oBAAS,GARf,mBAQbO,EARa,KAQNC,EARM,OASMR,oBAAS,GATf,mBASbS,EATa,KASNC,EATM,OAUIV,mBAAe,IAANH,GAVb,mBAUbc,EAVa,aAWcX,mBAASF,IAXvB,mBAWbc,EAXa,KAapB,SAASC,IACPL,GAAS,GACTE,GAAS,GAfS,MAuBP,IAAVH,GAAkBN,GAAU,MAAkB,IAAVQ,EACrCK,YAAW,WACPZ,EAAUD,EAASU,KACpBA,IACoB,IAAdC,IAAgC,IAAVH,IAC/BI,IACAX,EAAUN,IAGZ,IAAImB,EAAsB,IAATd,EAAeL,EAWhC,OATAoB,qBAAU,WAERZ,EAAWa,KAAKC,MAAMjB,EAAO,MAC7BK,EAAWW,KAAKC,MAAOjB,EAAO,IAAO,SAOrC,yBAAKkB,UAAU,SACb,0BAAMA,UAAU,SACbhB,EADH,IAGGE,GAEH,yBAAKc,UAAU,OACf,4BACEA,UAAY,WACZC,QAASP,GAFX,SAMA,4BACEM,UAAY,WACZC,QAzCN,WACEV,GAAS,GACTF,GAAS,KAqCP,UAOA,yBACEW,UAAU,eACV,yBACEE,MAAO,CAACC,MAAOP,EAAU,KACzBI,UAAU,gBAEPF,KAAKC,MAAMH,GAJhB,QC9COQ,MArBf,WAEA,OACE,oCACE,kBAAC,EAAD,CACE3B,KAAQ,KACRC,MAAS,EACTC,WAAS,EACTC,QAAM,IAGR,kBAAC,EAAD,CACEH,KAAQ,KACRC,MAAS,EACTC,WAAa,EACbC,QAAM,MCbZyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d826de48.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport './style.css';\r\n\r\nfunction Timer(props) {\r\n  \r\n  const {time, steps, onTick, autostart} = props;\r\n  \r\n\r\n  const [inTime, setInTime] = useState(time)\r\n  const [minutes, setMinutes] = useState();\r\n  const [seconds, setSeconds] = useState();\r\n  const [start, setStart] = useState(false);\r\n  const [pause, setPause] = useState(false);\r\n  const [step, setStep] = useState(steps*1000);\r\n  const [autoStart, setAutoStart] = useState(autostart);\r\n\r\n  function onStart() {\r\n    setStart(true);\r\n    setPause(false)\r\n  }\r\n\r\n  function onPause() {\r\n    setPause(true);\r\n    setStart(false);\r\n  }\r\n  \r\n  if(start === true && inTime >= 1000 && pause === false) {\r\n    setTimeout(() => {\r\n        setInTime(inTime - step);\r\n    }, step);\r\n  } else if (autoStart === true && pause === false) {\r\n    onStart();\r\n    setInTime(time);\r\n  }\r\n\r\n  let widthLine = (inTime * 100 / time);\r\n\r\n  useEffect(() => {\r\n    \r\n    setMinutes(Math.floor(inTime/60000));\r\n    setSeconds(Math.floor((inTime%60000)/1000));\r\n\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <span className=\"titel\">\r\n        {minutes}\r\n        :\r\n        {seconds}\r\n      </span>\r\n      <div className=\"btn\">\r\n      <button \r\n        className = \"startBtn\"\r\n        onClick={onStart}\r\n      >\r\n        Start\r\n      </button>\r\n      <button\r\n        className = \"pauseBtn\"\r\n        onClick={onPause}\r\n      >\r\n        Pause\r\n      </button>\r\n      </div>\r\n      <div \r\n        className=\"progressBox\">\r\n        <div \r\n          style={{width: widthLine+\"%\"}}\r\n          className=\"progressLine\"\r\n          >\r\n            {Math.floor(widthLine)}%\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;","import React from 'react';\nimport Timer from './Timer.jsx';\n\nfunction App() {\n\nreturn (\n  <>\n    <Timer\n      time = {75000}\n      steps = {1}\n      autostart\n      onTick\n\n    />\n    <Timer\n      time = {120000}\n      steps = {2}\n      autostart = {false}\n      onTick\n    />\n  </>\n);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}